# Docker Compose configuration for Real-Time BI Platform development environment

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: realtime-bi-postgres
    environment:
      POSTGRES_DB: realtime_bi
      POSTGRES_USER: realtime_bi_user
      POSTGRES_PASSWORD: realtime_bi_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - realtime-bi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U realtime_bi_user -d realtime_bi"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7
    container_name: realtime-bi-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - realtime-bi-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: realtime-bi-backend
    environment:
      - DATABASE_URL=postgresql+asyncpg://realtime_bi_user:realtime_bi_password@postgres:5432/realtime_bi
      - REDIS_URL=redis://redis:6379
      - SECRET_KEY=dev-secret-key-change-in-production
      - ALGORITHM=HS256
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - API_V1_STR=/api/v1
      - PROJECT_NAME=Real-Time BI Platform
      - BACKEND_CORS_ORIGINS=["http://localhost:3000", "http://frontend:3000"]
      - HUGGINGFACE_CACHE_DIR=/app/models
      - SPACY_MODEL=en_core_web_sm
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - backend_models:/app/models
    networks:
      - realtime-bi-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Development Server
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: realtime-bi-frontend
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - NEXT_PUBLIC_WS_URL=ws://localhost:8000/ws
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    networks:
      - realtime-bi-network
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_models:
    driver: local

networks:
  realtime-bi-network:
    driver: bridge
